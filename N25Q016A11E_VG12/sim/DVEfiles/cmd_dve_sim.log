set ucliGUI::state
set ucliGUI::state
ucliCore::getToolPID
synopsys::env hasTB
trigger_hier_stack_context_switch 0
synopsys::xml set_array_limit <data limit="50" />
synopsys::xml set_depth_limit <data limit="100" />
synopsys::xml set_string_limit <data limit="1000" />
synopsys::xml set_only_active_frame <data value="1" />
synopsys::xml set_variable_frame_id <data value="1" />
synUtils::setDVEInitPhase 1
synopsys::dump -type VPD -file /home/stu02/project/N25Q016A11E_VG12/sim/inter.vpd -locking
synopsys::dump -autoflush on -fid VPD0
set ::dve_fid VPD0
synUtils::setDVEInitPhase 0
ucliCore::getToolPID
synUtils::sendTool -active _icl_setToolSocket /tmp/smlnpYUq8pw
synUtils::sendTool -active {_icl_start_rpc -version "N-2017.12-SP2_Full64" -sync_file /tmp/vcs_dve_rpc.stu02.12196}
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.stu02.12196}
config endofsim noexit
config onfail enable all
config syscaddplainmembers
config syscaddsourcenames
config syscaddstructtypes
synopsys::listing -disable
# Begin_DVE_Session_Save_Info
# DVE view(Wave.1 ) session
# Saved on Thu Jan 24 13:38:48 2013
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Wave.1: 28 signals
# End_DVE_Session_Save_Info
# DVE version: F-2011.12_Full64
# DVE build date: Nov 22 2011 20:55:00
#<Session mode="View" path="/nfs/fm/disks/fm_fpg_n7006/global_work/p72/evillega/DS4/bfm/N25Q/512Mb_1_8V/NU_N25Q512A11E_VG10/sim/session.inter.vpd.tcl" type="Debug">
#<Database>
#</Database>
# DVE View/pane content session:
# Begin_DVE_Session_Save_Info (Wave.1)
# DVE wave signals session
# Saved on Thu Jan 24 13:38:48 2013
# 28 signals
# End_DVE_Session_Save_Info
# DVE version: F-2011.12_Full64
# DVE build date: Nov 22 2011 20:55:00
#Add ncecessay scopes
set Group1 Group1
if {[gui_sg_is_group -name Group1]} {     set Group1 [gui_sg_generate_new_name] }
set Group2 Group2
if {[gui_sg_is_group -name Group2]} {     set Group2 [gui_sg_generate_new_name] }
set Group3 Group3
if {[gui_sg_is_group -name Group3]} {     set Group3 [gui_sg_generate_new_name] }
set Group4 Group4
if {[gui_sg_is_group -name Group4]} {     set Group4 [gui_sg_generate_new_name] }
if {![info exists useOldWindow]} {  	set useOldWindow true }
if {$useOldWindow && [string first "Wave" [gui_get_current_window -view]]==0} {  	set Wave.1 [gui_get_current_window -view]  } else { 	gui_open_window Wave set Wave.1 [ gui_get_current_window -view ] }
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
set origGroupCreationState [gui_list_create_group_when_add -wave]
synopsys::dump -add {Testbench.DUT.C Testbench.DUT.DQ0 Testbench.DUT.DQ1 Testbench.DUT.HOLD_DQ3 Testbench.DUT.S Testbench.DUT.Vcc Testbench.DUT.Vpp_W_DQ2 } -aggregates  -fid VPD0
if {$origGroupCreationState} { 	gui_list_create_group_when_add -wave -enable }
if { $groupExD } {  gui_msg_report -code DVWW028 }
#</Session>
run
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
synopsys::xml get_stop_data
synopsys::xml {frames <data updateType="preserve" itemId="none" viewId="Stack.1" />}
ucliGUI::vpdAddHierarchy -scope Testbench.stim -depth 1 -file /home/stu02/project/N25Q016A11E_VG12/sim/inter.vpd; synopsys::dump -flush VPD0
if [catch {gui_sim_terminate}] {gui_sim_terminate -kill}
synopsys::finish
set ucliGUI::state
set ucliGUI::state
ucli_exit
