
HeaderInclude
config/csky/abiv2_csky_opts.h

march=ck803s
Target Report Var(flag_arch_ck803s) Undocumented
Use to transform to march=ck803 by CC1_SPEC.

march=
Target RejectNegative ToLower Joined Enum(csky_arch) Var(csky_arch_option) Save
Specify the name of the target architecture.

; Other csky_arch values are loaded from abiv2_csky_tables.opt
EnumValue
Enum(csky_arch) String(native) Value(-1) DriverOnly

mcpu=
Target RejectNegative ToLower Joined Enum(csky_processor_type) Var(csky_cpu_option) Init(TARGET_CPU_csky_none) Save
Specify the name of the target CPU.

; Other csky_processor_type values are loaded from abiv2_csky_tables.opt
EnumValue
Enum(csky_processor_type) String(native) Value(-1) DriverOnly

mfpu=
Target RejectNegative Joined Enum(csky_fpu) Var(csky_fpu_index) Init(TARGET_FPU_auto) Save
Specify the name of the target floating point hardware/format.

mdouble-float
Target Report Mask(DOUBLE_FLOAT)
Use CSKY FPU double float instructions.

mbranch-cost=
Target Report Joined RejectNegative UInteger Var(csky_branch_cost) Undocumented
Set the branch costs for conditional branch instructions.  Reasonable values are small, non-negative integers.

mdsp
Target RejectNegative Report Mask(DSP)
Use CSKY DSP instructions.

mmac
Target RejectNegative Report Mask(SECURITY)
Use CSKY SECURE instruction.

mcp
Target RejectNegative Report Mask(CP)
Coprocessor instruction.

-mcoprocessor
Target RejectNegative Report Alias(mcp) Undocumented

mmp
Target RejectNegative Report Mask(MP)
Multiple processor instructions.

-mmultiple-processor
Target RejectNegative Report Alias(mmp) Undocumented

-mcache
Target RejectNegative Report Mask(CACHE)
Cache prefetch instruction.

mbig-endian
Target RejectNegative Report Mask(BIG_ENDIAN)
Generate big-endian code.

EB
Target RejectNegative Report Alias(mbig-endian) Undocumented

mlittle-endian
Target RejectNegative Report InverseMask(BIG_ENDIAN)
Generate little-endian code.

EL
Target RejectNegative Report Alias(mlittle-endian) Undocumented

mdiv
Target Report Mask(DIV)
Use the divide instruction.

mwide-bitfields
Target Report Mask(W_FIELD)
Always treat bitfields as int-sized.

mhard-float
Target RejectNegative Alias(mfloat-abi=, hard) Undocumented

msoft-float
Target RejectNegative Alias(mfloat-abi=, soft) Undocumented

mfloat-abi=v2
Target RejectNegative Alias(mfloat-abi=, hard) Undocumented

mfloat-abi=v1
Target RejectNegative Alias(mfloat-abi=, softfp) Undocumented

mmultiple-stld
Target Report Mask(MULTIPLE_STLD)
Generate code with stm instruction.

mstm
Target Report RejectNegative Alias(mmultiple-stld) Undocumented

mhigh-registers
Target Report Mask(HIGH_REGISTERS)
Use R16-R31(default).

manchor
Target Report Mask(ANCHOR) Undocumented
Use global anchor symbol address.

msmart
Target RejectNegative Report Mask(SMART)
Let CPU work in Smart Mode.

mpushpop
Target Report Mask(PUSHPOP)
Generate code with push/pop instruction, -mpushpop is default.

-mhard-tp
Target RejectNegative Report Mask(HARD_TP) Undocumented
Generate TLS code use TLS register.

mstrict-align
Target Report Mask(STRICT_ALIGNMENT)
Do not use unaligned memory references.

mfdivdu
Target Report Mask(FDIVDU)
Use frecipd/fsqrtd/fdivd insns.

mistack
Target Report Mask(ATTRIBUTE_ISR)
Decide whether use interrput attribute.

mconstpool
Target Report Mask(CONSTANT_POOL)
Dump the constant pool by compiler.

melrw
Target Report Mask(ELRW)
Use the extend LRW instruction(elrw).

mstack-size
Target Report Mask(STACK_SIZE)
Output stack size information, default.

mbacktrace
Target Report RejectNegative Mask(BACKTRACE) Undocumented
Generate target can be backtraced.

mccrt
Target Report Mask(LIBCCRT)
Use CSKY compiler runtime instead of libgcc, -mccrt is default.

mtrust
Target Report Var(flag_csky_trust)
Use Csky TRUST instructions.

medsp
Target Report Var(flag_csky_enhance_dsp)
Use Csky Enhance DSP instructions.

fcse-cc
Common Report Var(flag_cse_cc) Optimization
Allow common condition code set expression elimination.

fsched-prolog
Common Report Var(flag_sched_prolog) Undocumented
Permit scheduling of a function's prologue sequence.

mfloat-abi=
Target RejectNegative Joined Enum(float_abi_type) Var(csky_float_abi) Init(CSKY_FLOAT_ABI_SOFT)
Specify if floating point hardware should be used.

Enum
Name(float_abi_type) Type(enum float_abi_type)
Known floating-point ABIs (for use with the -mfloat-abi= option):

EnumValue
Enum(float_abi_type) String(soft) Value(CSKY_FLOAT_ABI_SOFT)

EnumValue
Enum(float_abi_type) String(softfp) Value(CSKY_FLOAT_ABI_SOFTFP)

EnumValue
Enum(float_abi_type) String(hard) Value(CSKY_FLOAT_ABI_HARD)

mdoloop
Target Report Var(flag_csky_doloop) Init(1) Undocumented
Use Csky DSP V2.0 instructions bloop.

marg-mode-compatible
Target Report Var(flag_arg_mode_compatible) Init(0) Undocumented
Compatible parameters mode size among INT to reduce insns, marg-mode-compatible is default.

mlra
Target Report Var(flag_lra) Init(1)
Use lra instead of reload pass to perform cleanup after integrated register allocation.

mvdsp-width=
Target Report Joined RejectNegative UInteger Var(flag_csky_vdsp_width) Init(128)
Set the 810 vdsp vector register width, the default is 128.

mvdsp-noisa
Target Report Joined RejectNegative UInteger Var(vdsp_noisa) Init(0) Save Undocumented
Set the unsupported vdsp insns, the default is 0.